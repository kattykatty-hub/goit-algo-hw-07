class TreeNode:
    def __init__(self, key):
        self.val = key
        self.left = None
        self.right = None
        self.height = 1


def find_max_value(root):
    if not root:
        return None
    
    while root.right:
        root = root.right
    
    return root.val


# Приклад використання для BST
def insert(root, key):
    if not root:
        return TreeNode(key)
    elif key < root.val:
        root.left = insert(root.left, key)
    else:
        root.right = insert(root.right, key)
    
    return root

# Приклад використання для AVL-дерева
def height(node):
    if not node:
        return 0
    return node.height

def rotate_right(y):
    x = y.left
    T2 = x.right
    
    x.right = y
    y.left = T2
    
    y.height = 1 + max(height(y.left), height(y.right))
    x.height = 1 + max(height(x.left), height(x.right))
    
    return x

def rotate_left(x):
    y = x.right
    T2 = y.left
    
    y.left = x
    x.right = T2
    
    x.height = 1 + max(height(x.left), height(x.right))
    y.height = 1 + max(height(y.left), height(y.right))
    
    return y

def balance_factor(node):
    if not node:
        return 0
    return height(node.left) - height(node.right)

def insert_avl(root, key):
    if not root:
        return TreeNode(key)
    elif key < root.val:
        root.left = insert_avl(root.left, key)
    else:
        root.right = insert_avl(root.right, key)
    
    root.height = 1 + max(height(root.left), height(root.right))
    
    balance = balance_factor(root)
    
    if balance > 1:
        if key < root.left.val:
            return rotate_right(root)
        else:
            root.left = rotate_left(root.left)
            return rotate_right(root)
    if balance < -1:
        if key > root.right.val:
            return rotate_left(root)
        else:
            root.right = rotate_right(root.right)
            return rotate_left(root)
    
    return root


# Приклад використання
if __name__ == "__main__":
    root = None
    root = insert(root, 50)
    root = insert(root, 30)
    root = insert(root, 20)
    root = insert(root, 40)
    root = insert(root, 70)
    root = insert(root, 60)
    root = insert(root, 80)
    
    print("Найбільше значення у BST:", find_max_value(root))  # Виведе 80
    
    root_avl = None
    root_avl = insert_avl(root_avl, 50)
    root_avl = insert_avl(root_avl, 30)
    root_avl = insert_avl(root_avl, 20)
    root_avl = insert_avl(root_avl, 40)
    root_avl = insert_avl(root_avl, 70)
    root_avl = insert_avl(root_avl, 60)
    root_avl = insert_avl(root_avl, 80)
    
    print("Найбільше значення у AVL-дереві:", find_max_value(root_avl))  # Виведе 80
